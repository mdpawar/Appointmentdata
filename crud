<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
    <form id="mainForm" onsubmit="saveToCrudCrud(event)">
        <label>Name</label>
        <input type="text" class="form-control mr-2" id="name">
        <label>Email</label>
        <input type="email" class="form-control mr-2" id="emailId">
        <label>Phone Number</label>
        <input type="tel" class="form-control mr-2" id="phoneNumber">
        <button type="submit">Submit</button>
    </form>
    <ul id="listOfItems"></ul>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.4.0/axios.min.js"></script>
    <script>
        let editingUserId = null;

        function saveToCrudCrud(event) {
            event.preventDefault();
            const name = event.target.name.value;
            const email = event.target.emailId.value;
            const phone = event.target.phoneNumber.value;

            let obj = {
                name,
                email,
                phone
            };

            if (editingUserId) {
                axios.put(`https://crudcrud.com/api/f5caeb2f072d4225821a7ab560eb3766/AppointmentData/${editingUserId}`, obj)
                    .then(() => {
                        // Update the user details in the list
                        const userElement = document.querySelector(`[data-user-id="${editingUserId}"]`);
                        if (userElement) {
                            userElement.textContent = `${obj.name} - ${obj.email} - ${obj.phone}`;
                        }
                        // Clear the editingUserId
                        editingUserId = null;
                        // Clear the form
                        document.getElementById('mainForm').reset();
                    })
                    .catch((error) => {
                        console.error(error);
                    });
            } else {
                axios.post('https://crudcrud.com/api/f5caeb2f072d4225821a7ab560eb3766/AppointmentData', obj)
                    .then((response) => {
                        console.log(response.data);
                        showUserOnScreen(obj);
                        document.getElementById('mainForm').reset();
                    })
                    .catch((err) => {
                        console.error(err);
                    });
            }
        }

        window.addEventListener("DOMContentLoaded", () => {
            axios.get("https://crudcrud.com/api/f5caeb2f072d4225821a7ab560eb3766/AppointmentData")
                .then((response) => {
                    for (var i = 0; i < response.data.length; i++) {
                        showNewUserOnScreen(response.data[i]);
                    }
                }).catch((error) => {
                    console.error(error);
                });
        });

        function deleteUser(userId) {
            axios.delete(`https://crudcrud.com/api/f5caeb2f072d4225821a7ab560eb3766/AppointmentData/${userId}`)
                .then(() => {
                    const userElement = document.querySelector(`[data-user-id="${userId}"]`);
                    if (userElement) {
                        userElement.remove();
                    }
                })
                .catch((error) => {
                    console.error(error);
                });
        }

        function editUser(userId) {
            axios.get(`https://crudcrud.com/api/f5caeb2f072d4225821a7ab560eb3766/AppointmentData/${userId}`)
                .then((response) => {
                    const user = response.data;
                    document.getElementById('name').value = user.name;
                    document.getElementById('emailId').value = user.email;
                    document.getElementById('phoneNumber').value = user.phone;
                    editingUserId = userId;
                })
                .catch((error) => {
                    console.error(error);
                });
        }

        function showNewUserOnScreen(userData) {
            const parentEle = document.getElementById('listOfItems');
            const childEle = document.createElement('li');
            childEle.innerHTML = `
                ${userData.name} - ${userData.email} - ${userData.phone}
                <span class="edit-icon" onclick="editUser('${userData._id}')">EDIT;</span>
                <span class="delete-icon" onclick="deleteUser('${userData._id}')">DELETE;</span>
            `;
            childEle.setAttribute('data-user-id', userData._id);
            parentEle.appendChild(childEle);
        }

        function showUserOnScreen(obj) {
            const parentEle = document.getElementById('listOfItems');
            const childEle = document.createElement('li');
            childEle.innerHTML = `
                ${obj.name} - ${obj.email} - ${obj.phone}
                <span class="edit-icon" onclick="editUser('${editingUserId}')">EDIT;</span>
                <span class="delete-icon" onclick="deleteUser('${editingUserId}')">DELETE;</span>
            `;
            childEle.setAttribute('data-user-id', editingUserId);
            parentEle.appendChild(childEle);
        }
    </script>
     <style>
      .delete-icon, .edit-icon {
          cursor: pointer;
          margin-left: 10px;
      }
      .delete-icon {
          color: red;
      }
      .edit-icon {
          color: blue;
      }
  </style>
</body>
</html>
